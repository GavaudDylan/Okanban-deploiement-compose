services:
  # nom du service
  api:
    # construction de notre image
    build:
      # à partir du répertoire ./api
      context: ./api
      # on utilise le fichier Dockerfile.api
      dockerfile: Dockerfile.api
    # on expose le port 3000 du conteneur sur notre port 3000
    ports:
      - 3000:3000
    # le serivce api dépend du service db
    depends_on:
      - db
    # on nomme le conteneur parce qu'on fait les choses proprement
    container_name: okanban-api

  # nom du service
  client:
    # construction de l'image du service
    build:
      # à partir du répertoire ./client
      context: ./client
      # on utilise le fichier Dockerfile.cli
      dockerfile: Dockerfile.cli
    # on expose le port 4173 du conteneur sur notre port 4173
    ports:
      - 4173:4173
    # notre service ne démarre que quand le service api est prêt
    depends_on:
      - api
    # on nomme notre conteneur pour savoir qui il est
    container_name: okanban-cli

  # nom du service
  db:
    # on utilise l'image postgre
    image: postgres
    # nom du conteneur
    container_name: okanban-database
    # environnement : on déclare les infos nécessaires à notre BDD
    environment:
      - POSTGRES_USER=okanban
      - POSTGRES_PASSWORD=okanban
      - POSTGRES_DB=okanban
    # on monte les volumes
    volumes:
      # répertoire des scripts d'initialisation
      - ./api/data:/docker-entrypoint-initdb.d
      # volume de persistance des données
      - pg-okanban:/var/lib/postgresql/data

# ne pas oublier les volumes de persistance utilisés
volumes:
  pg-okanban:
